<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TmpDatUsuUsuario', 'doctrine');

/**
 * BaseTmpDatUsuUsuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $nombre
 * @property string $paterno
 * @property string $materno
 * @property string $email
 * @property string $telefono
 * @property string $celular
 * @property string $direccion
 * @property integer $estado_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $cargo_id
 * @property integer $usu_tipo
 * 
 * @method integer          getId()         Returns the current record's "id" value
 * @method string           getUsername()   Returns the current record's "username" value
 * @method string           getPassword()   Returns the current record's "password" value
 * @method string           getNombre()     Returns the current record's "nombre" value
 * @method string           getPaterno()    Returns the current record's "paterno" value
 * @method string           getMaterno()    Returns the current record's "materno" value
 * @method string           getEmail()      Returns the current record's "email" value
 * @method string           getTelefono()   Returns the current record's "telefono" value
 * @method string           getCelular()    Returns the current record's "celular" value
 * @method string           getDireccion()  Returns the current record's "direccion" value
 * @method integer          getEstadoId()   Returns the current record's "estado_id" value
 * @method timestamp        getCreatedAt()  Returns the current record's "created_at" value
 * @method timestamp        getUpdatedAt()  Returns the current record's "updated_at" value
 * @method integer          getCargoId()    Returns the current record's "cargo_id" value
 * @method integer          getUsuTipo()    Returns the current record's "usu_tipo" value
 * @method TmpDatUsuUsuario setId()         Sets the current record's "id" value
 * @method TmpDatUsuUsuario setUsername()   Sets the current record's "username" value
 * @method TmpDatUsuUsuario setPassword()   Sets the current record's "password" value
 * @method TmpDatUsuUsuario setNombre()     Sets the current record's "nombre" value
 * @method TmpDatUsuUsuario setPaterno()    Sets the current record's "paterno" value
 * @method TmpDatUsuUsuario setMaterno()    Sets the current record's "materno" value
 * @method TmpDatUsuUsuario setEmail()      Sets the current record's "email" value
 * @method TmpDatUsuUsuario setTelefono()   Sets the current record's "telefono" value
 * @method TmpDatUsuUsuario setCelular()    Sets the current record's "celular" value
 * @method TmpDatUsuUsuario setDireccion()  Sets the current record's "direccion" value
 * @method TmpDatUsuUsuario setEstadoId()   Sets the current record's "estado_id" value
 * @method TmpDatUsuUsuario setCreatedAt()  Sets the current record's "created_at" value
 * @method TmpDatUsuUsuario setUpdatedAt()  Sets the current record's "updated_at" value
 * @method TmpDatUsuUsuario setCargoId()    Sets the current record's "cargo_id" value
 * @method TmpDatUsuUsuario setUsuTipo()    Sets the current record's "usu_tipo" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTmpDatUsuUsuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tmp_dat_usu_usuario');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('username', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('password', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '200',
             ));
        $this->hasColumn('nombre', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('paterno', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('materno', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '30',
             ));
        $this->hasColumn('email', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '50',
             ));
        $this->hasColumn('telefono', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('celular', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('direccion', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '60',
             ));
        $this->hasColumn('estado_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('cargo_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('usu_tipo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}