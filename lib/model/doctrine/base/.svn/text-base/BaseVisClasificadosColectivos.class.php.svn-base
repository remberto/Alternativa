<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VisClasificadosColectivos', 'doctrine');

/**
 * BaseVisClasificadosColectivos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $cod_ue
 * @property string $desc_ue
 * @property integer $posicion
 * @property string $genero_id
 * @property string $desc_disciplina
 * @property string $desc_prueba
 * @property integer $circunscripcion_id
 * @property integer $tipo_id
 * @property integer $cod_distrito
 * @property string $distrito
 * 
 * @method integer                   getId()                 Returns the current record's "id" value
 * @method string                    getCodUe()              Returns the current record's "cod_ue" value
 * @method string                    getDescUe()             Returns the current record's "desc_ue" value
 * @method integer                   getPosicion()           Returns the current record's "posicion" value
 * @method string                    getGeneroId()           Returns the current record's "genero_id" value
 * @method string                    getDescDisciplina()     Returns the current record's "desc_disciplina" value
 * @method string                    getDescPrueba()         Returns the current record's "desc_prueba" value
 * @method integer                   getCircunscripcionId()  Returns the current record's "circunscripcion_id" value
 * @method integer                   getTipoId()             Returns the current record's "tipo_id" value
 * @method integer                   getCodDistrito()        Returns the current record's "cod_distrito" value
 * @method string                    getDistrito()           Returns the current record's "distrito" value
 * @method VisClasificadosColectivos setId()                 Sets the current record's "id" value
 * @method VisClasificadosColectivos setCodUe()              Sets the current record's "cod_ue" value
 * @method VisClasificadosColectivos setDescUe()             Sets the current record's "desc_ue" value
 * @method VisClasificadosColectivos setPosicion()           Sets the current record's "posicion" value
 * @method VisClasificadosColectivos setGeneroId()           Sets the current record's "genero_id" value
 * @method VisClasificadosColectivos setDescDisciplina()     Sets the current record's "desc_disciplina" value
 * @method VisClasificadosColectivos setDescPrueba()         Sets the current record's "desc_prueba" value
 * @method VisClasificadosColectivos setCircunscripcionId()  Sets the current record's "circunscripcion_id" value
 * @method VisClasificadosColectivos setTipoId()             Sets the current record's "tipo_id" value
 * @method VisClasificadosColectivos setCodDistrito()        Sets the current record's "cod_distrito" value
 * @method VisClasificadosColectivos setDistrito()           Sets the current record's "distrito" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Ing. Ivan Callapa Quiroz
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseVisClasificadosColectivos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vis_clasificados_colectivos');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('cod_ue', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('desc_ue', 'string', 70, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '70',
             ));
        $this->hasColumn('posicion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('genero_id', 'string', 7, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '7',
             ));
        $this->hasColumn('desc_disciplina', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('desc_prueba', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('circunscripcion_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('tipo_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('cod_distrito', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('distrito', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}