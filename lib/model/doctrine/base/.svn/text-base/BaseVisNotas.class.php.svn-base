<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VisNotas', 'doctrine');

/**
 * BaseVisNotas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $desc_ue
 * @property string $cod_ue
 * @property integer $gestion_id
 * @property string $codigo_rude
 * @property string $paterno
 * @property string $materno
 * @property string $nombre
 * @property date $fecha_nacimiento
 * @property string $desc_asignatura
 * @property integer $primer_trimestre
 * @property integer $segundo_trimestre
 * @property integer $tercer_trimestre
 * @property integer $promedio_anual
 * @property integer $reforzamiento
 * @property integer $promedio_final
 * @property string $cod_le_id
 * @property integer $nivel_id
 * @property integer $grado_id
 * @property integer $ciclo_id
 * @property string $paralelo
 * @property integer $turno_id
 * @property integer $estado_matricula_inicio_id
 * @property integer $estado_matricula_fin_id
 * @property integer $cod_org_curr_id
 * @property integer $cod_dependencia_id
 * @property integer $cod_convenio_id
 * 
 * @method integer  getId()                         Returns the current record's "id" value
 * @method string   getDescUe()                     Returns the current record's "desc_ue" value
 * @method string   getCodUe()                      Returns the current record's "cod_ue" value
 * @method integer  getGestionId()                  Returns the current record's "gestion_id" value
 * @method string   getCodigoRude()                 Returns the current record's "codigo_rude" value
 * @method string   getPaterno()                    Returns the current record's "paterno" value
 * @method string   getMaterno()                    Returns the current record's "materno" value
 * @method string   getNombre()                     Returns the current record's "nombre" value
 * @method date     getFechaNacimiento()            Returns the current record's "fecha_nacimiento" value
 * @method string   getDescAsignatura()             Returns the current record's "desc_asignatura" value
 * @method integer  getPrimerTrimestre()            Returns the current record's "primer_trimestre" value
 * @method integer  getSegundoTrimestre()           Returns the current record's "segundo_trimestre" value
 * @method integer  getTercerTrimestre()            Returns the current record's "tercer_trimestre" value
 * @method integer  getPromedioAnual()              Returns the current record's "promedio_anual" value
 * @method integer  getReforzamiento()              Returns the current record's "reforzamiento" value
 * @method integer  getPromedioFinal()              Returns the current record's "promedio_final" value
 * @method string   getCodLeId()                    Returns the current record's "cod_le_id" value
 * @method integer  getNivelId()                    Returns the current record's "nivel_id" value
 * @method integer  getGradoId()                    Returns the current record's "grado_id" value
 * @method integer  getCicloId()                    Returns the current record's "ciclo_id" value
 * @method string   getParalelo()                   Returns the current record's "paralelo" value
 * @method integer  getTurnoId()                    Returns the current record's "turno_id" value
 * @method integer  getEstadoMatriculaInicioId()    Returns the current record's "estado_matricula_inicio_id" value
 * @method integer  getEstadoMatriculaFinId()       Returns the current record's "estado_matricula_fin_id" value
 * @method integer  getCodOrgCurrId()               Returns the current record's "cod_org_curr_id" value
 * @method integer  getCodDependenciaId()           Returns the current record's "cod_dependencia_id" value
 * @method integer  getCodConvenioId()              Returns the current record's "cod_convenio_id" value
 * @method VisNotas setId()                         Sets the current record's "id" value
 * @method VisNotas setDescUe()                     Sets the current record's "desc_ue" value
 * @method VisNotas setCodUe()                      Sets the current record's "cod_ue" value
 * @method VisNotas setGestionId()                  Sets the current record's "gestion_id" value
 * @method VisNotas setCodigoRude()                 Sets the current record's "codigo_rude" value
 * @method VisNotas setPaterno()                    Sets the current record's "paterno" value
 * @method VisNotas setMaterno()                    Sets the current record's "materno" value
 * @method VisNotas setNombre()                     Sets the current record's "nombre" value
 * @method VisNotas setFechaNacimiento()            Sets the current record's "fecha_nacimiento" value
 * @method VisNotas setDescAsignatura()             Sets the current record's "desc_asignatura" value
 * @method VisNotas setPrimerTrimestre()            Sets the current record's "primer_trimestre" value
 * @method VisNotas setSegundoTrimestre()           Sets the current record's "segundo_trimestre" value
 * @method VisNotas setTercerTrimestre()            Sets the current record's "tercer_trimestre" value
 * @method VisNotas setPromedioAnual()              Sets the current record's "promedio_anual" value
 * @method VisNotas setReforzamiento()              Sets the current record's "reforzamiento" value
 * @method VisNotas setPromedioFinal()              Sets the current record's "promedio_final" value
 * @method VisNotas setCodLeId()                    Sets the current record's "cod_le_id" value
 * @method VisNotas setNivelId()                    Sets the current record's "nivel_id" value
 * @method VisNotas setGradoId()                    Sets the current record's "grado_id" value
 * @method VisNotas setCicloId()                    Sets the current record's "ciclo_id" value
 * @method VisNotas setParalelo()                   Sets the current record's "paralelo" value
 * @method VisNotas setTurnoId()                    Sets the current record's "turno_id" value
 * @method VisNotas setEstadoMatriculaInicioId()    Sets the current record's "estado_matricula_inicio_id" value
 * @method VisNotas setEstadoMatriculaFinId()       Sets the current record's "estado_matricula_fin_id" value
 * @method VisNotas setCodOrgCurrId()               Sets the current record's "cod_org_curr_id" value
 * @method VisNotas setCodDependenciaId()           Sets the current record's "cod_dependencia_id" value
 * @method VisNotas setCodConvenioId()              Sets the current record's "cod_convenio_id" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseVisNotas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vis_notas');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('desc_ue', 'string', 70, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '70',
             ));
        $this->hasColumn('cod_ue', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('gestion_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('codigo_rude', 'string', 18, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '18',
             ));
        $this->hasColumn('paterno', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('materno', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('nombre', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('fecha_nacimiento', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1900-01-01',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('desc_asignatura', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('primer_trimestre', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('segundo_trimestre', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('tercer_trimestre', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('promedio_anual', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('reforzamiento', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('promedio_final', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('cod_le_id', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('nivel_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('grado_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('ciclo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('paralelo', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('turno_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('estado_matricula_inicio_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('estado_matricula_fin_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('cod_org_curr_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('cod_dependencia_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('cod_convenio_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}