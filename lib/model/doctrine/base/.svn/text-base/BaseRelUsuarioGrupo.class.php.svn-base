<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RelUsuarioGrupo', 'doctrine');

/**
 * BaseRelUsuarioGrupo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $usuario_id
 * @property integer $grupo_id
 * @property DatUsuUsuario $DatUsuUsuario
 * @property DatUsuGrupo $DatUsuGrupo
 * 
 * @method integer         getUsuarioId()     Returns the current record's "usuario_id" value
 * @method integer         getGrupoId()       Returns the current record's "grupo_id" value
 * @method DatUsuUsuario   getDatUsuUsuario() Returns the current record's "DatUsuUsuario" value
 * @method DatUsuGrupo     getDatUsuGrupo()   Returns the current record's "DatUsuGrupo" value
 * @method RelUsuarioGrupo setUsuarioId()     Sets the current record's "usuario_id" value
 * @method RelUsuarioGrupo setGrupoId()       Sets the current record's "grupo_id" value
 * @method RelUsuarioGrupo setDatUsuUsuario() Sets the current record's "DatUsuUsuario" value
 * @method RelUsuarioGrupo setDatUsuGrupo()   Sets the current record's "DatUsuGrupo" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRelUsuarioGrupo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rel_usuario_grupo');
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('grupo_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DatUsuUsuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id'));

        $this->hasOne('DatUsuGrupo', array(
             'local' => 'grupo_id',
             'foreign' => 'id'));
    }
}