<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TmpDatSlnCursoOferta', 'doctrine');

/**
 * BaseTmpDatSlnCursoOferta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_curso_oferta
 * @property string $cod_ue_id
 * @property integer $periodo_id
 * @property integer $operativo_id
 * @property integer $gestion_id
 * @property integer $sub_cea_id
 * @property integer $grado_id
 * @property integer $ciclo_id
 * @property integer $nivel_id
 * @property string $paralelo
 * @property integer $turno_id
 * @property integer $cod_asignatura_id
 * @property integer $docente_id
 * 
 * @method integer              getIdCursoOferta()     Returns the current record's "id_curso_oferta" value
 * @method string               getCodUeId()           Returns the current record's "cod_ue_id" value
 * @method integer              getPeriodoId()         Returns the current record's "periodo_id" value
 * @method integer              getOperativoId()       Returns the current record's "operativo_id" value
 * @method integer              getGestionId()         Returns the current record's "gestion_id" value
 * @method integer              getSubCeaId()          Returns the current record's "sub_cea_id" value
 * @method integer              getGradoId()           Returns the current record's "grado_id" value
 * @method integer              getCicloId()           Returns the current record's "ciclo_id" value
 * @method integer              getNivelId()           Returns the current record's "nivel_id" value
 * @method string               getParalelo()          Returns the current record's "paralelo" value
 * @method integer              getTurnoId()           Returns the current record's "turno_id" value
 * @method integer              getCodAsignaturaId()   Returns the current record's "cod_asignatura_id" value
 * @method integer              getDocenteId()         Returns the current record's "docente_id" value
 * @method TmpDatSlnCursoOferta setIdCursoOferta()     Sets the current record's "id_curso_oferta" value
 * @method TmpDatSlnCursoOferta setCodUeId()           Sets the current record's "cod_ue_id" value
 * @method TmpDatSlnCursoOferta setPeriodoId()         Sets the current record's "periodo_id" value
 * @method TmpDatSlnCursoOferta setOperativoId()       Sets the current record's "operativo_id" value
 * @method TmpDatSlnCursoOferta setGestionId()         Sets the current record's "gestion_id" value
 * @method TmpDatSlnCursoOferta setSubCeaId()          Sets the current record's "sub_cea_id" value
 * @method TmpDatSlnCursoOferta setGradoId()           Sets the current record's "grado_id" value
 * @method TmpDatSlnCursoOferta setCicloId()           Sets the current record's "ciclo_id" value
 * @method TmpDatSlnCursoOferta setNivelId()           Sets the current record's "nivel_id" value
 * @method TmpDatSlnCursoOferta setParalelo()          Sets the current record's "paralelo" value
 * @method TmpDatSlnCursoOferta setTurnoId()           Sets the current record's "turno_id" value
 * @method TmpDatSlnCursoOferta setCodAsignaturaId()   Sets the current record's "cod_asignatura_id" value
 * @method TmpDatSlnCursoOferta setDocenteId()         Sets the current record's "docente_id" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTmpDatSlnCursoOferta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tmp_dat_sln_curso_oferta');
        $this->hasColumn('id_curso_oferta', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('cod_ue_id', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('periodo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('operativo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('gestion_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('sub_cea_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('grado_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('ciclo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('nivel_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('paralelo', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('turno_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('cod_asignatura_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('docente_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}