<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DatRdeInscripcionT', 'doctrine');

/**
 * BaseDatRdeInscripcionT
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_inscripcion_tecnica
 * @property integer $gestion_id
 * @property integer $num_matricula
 * @property string $cod_ue_id
 * @property integer $periodo_id
 * @property integer $operativo_id
 * @property integer $sub_cea
 * @property integer $curso_oferta_id
 * @property string $codigo_rude_id
 * @property integer $modalidad_ensenanza_id
 * @property date $fecha_inscripcion
 * @property string $acreditacion
 * @property string $nivel
 * 
 * @method integer            getId()                     Returns the current record's "id" value
 * @method integer            getIdInscripcionTecnica()   Returns the current record's "id_inscripcion_tecnica" value
 * @method integer            getGestionId()              Returns the current record's "gestion_id" value
 * @method integer            getNumMatricula()           Returns the current record's "num_matricula" value
 * @method string             getCodUeId()                Returns the current record's "cod_ue_id" value
 * @method integer            getPeriodoId()              Returns the current record's "periodo_id" value
 * @method integer            getOperativoId()            Returns the current record's "operativo_id" value
 * @method integer            getSubCea()                 Returns the current record's "sub_cea" value
 * @method integer            getCursoOfertaId()          Returns the current record's "curso_oferta_id" value
 * @method string             getCodigoRudeId()           Returns the current record's "codigo_rude_id" value
 * @method integer            getModalidadEnsenanzaId()   Returns the current record's "modalidad_ensenanza_id" value
 * @method date               getFechaInscripcion()       Returns the current record's "fecha_inscripcion" value
 * @method string             getAcreditacion()           Returns the current record's "acreditacion" value
 * @method string             getNivel()                  Returns the current record's "nivel" value
 * @method DatRdeInscripcionT setId()                     Sets the current record's "id" value
 * @method DatRdeInscripcionT setIdInscripcionTecnica()   Sets the current record's "id_inscripcion_tecnica" value
 * @method DatRdeInscripcionT setGestionId()              Sets the current record's "gestion_id" value
 * @method DatRdeInscripcionT setNumMatricula()           Sets the current record's "num_matricula" value
 * @method DatRdeInscripcionT setCodUeId()                Sets the current record's "cod_ue_id" value
 * @method DatRdeInscripcionT setPeriodoId()              Sets the current record's "periodo_id" value
 * @method DatRdeInscripcionT setOperativoId()            Sets the current record's "operativo_id" value
 * @method DatRdeInscripcionT setSubCea()                 Sets the current record's "sub_cea" value
 * @method DatRdeInscripcionT setCursoOfertaId()          Sets the current record's "curso_oferta_id" value
 * @method DatRdeInscripcionT setCodigoRudeId()           Sets the current record's "codigo_rude_id" value
 * @method DatRdeInscripcionT setModalidadEnsenanzaId()   Sets the current record's "modalidad_ensenanza_id" value
 * @method DatRdeInscripcionT setFechaInscripcion()       Sets the current record's "fecha_inscripcion" value
 * @method DatRdeInscripcionT setAcreditacion()           Sets the current record's "acreditacion" value
 * @method DatRdeInscripcionT setNivel()                  Sets the current record's "nivel" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Ing. Ivan Callapa Quiroz
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDatRdeInscripcionT extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dat_rde_inscripcion_t');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('id_inscripcion_tecnica', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('gestion_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('num_matricula', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('cod_ue_id', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('periodo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('operativo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('sub_cea', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('curso_oferta_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('codigo_rude_id', 'string', 18, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '18',
             ));
        $this->hasColumn('modalidad_ensenanza_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('fecha_inscripcion', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('acreditacion', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('nivel', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}