<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CtrSlnCambioEstado', 'doctrine');

/**
 * BaseCtrSlnCambioEstado
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $inscripcion_id
 * @property integer $gestion_id
 * @property integer $estado_anterior
 * @property integer $estado_actual
 * @property integer $usuario_id
 * @property timestamp $fecha_modificacion
 * @property DatRdeInscripcion $DatRdeInscripcion
 * @property DatRdeInscripcion $DatRdeInscripcion_2
 * @property ClaEstadoMatricula $ClaEstadoMatricula
 * @property ClaEstadoMatricula $ClaEstadoMatricula_4
 * @property DatUsuUsuario $DatUsuUsuario
 * 
 * @method integer            getId()                   Returns the current record's "id" value
 * @method integer            getInscripcionId()        Returns the current record's "inscripcion_id" value
 * @method integer            getGestionId()            Returns the current record's "gestion_id" value
 * @method integer            getEstadoAnterior()       Returns the current record's "estado_anterior" value
 * @method integer            getEstadoActual()         Returns the current record's "estado_actual" value
 * @method integer            getUsuarioId()            Returns the current record's "usuario_id" value
 * @method timestamp          getFechaModificacion()    Returns the current record's "fecha_modificacion" value
 * @method DatRdeInscripcion  getDatRdeInscripcion()    Returns the current record's "DatRdeInscripcion" value
 * @method DatRdeInscripcion  getDatRdeInscripcion2()   Returns the current record's "DatRdeInscripcion_2" value
 * @method ClaEstadoMatricula getClaEstadoMatricula()   Returns the current record's "ClaEstadoMatricula" value
 * @method ClaEstadoMatricula getClaEstadoMatricula4()  Returns the current record's "ClaEstadoMatricula_4" value
 * @method DatUsuUsuario      getDatUsuUsuario()        Returns the current record's "DatUsuUsuario" value
 * @method CtrSlnCambioEstado setId()                   Sets the current record's "id" value
 * @method CtrSlnCambioEstado setInscripcionId()        Sets the current record's "inscripcion_id" value
 * @method CtrSlnCambioEstado setGestionId()            Sets the current record's "gestion_id" value
 * @method CtrSlnCambioEstado setEstadoAnterior()       Sets the current record's "estado_anterior" value
 * @method CtrSlnCambioEstado setEstadoActual()         Sets the current record's "estado_actual" value
 * @method CtrSlnCambioEstado setUsuarioId()            Sets the current record's "usuario_id" value
 * @method CtrSlnCambioEstado setFechaModificacion()    Sets the current record's "fecha_modificacion" value
 * @method CtrSlnCambioEstado setDatRdeInscripcion()    Sets the current record's "DatRdeInscripcion" value
 * @method CtrSlnCambioEstado setDatRdeInscripcion2()   Sets the current record's "DatRdeInscripcion_2" value
 * @method CtrSlnCambioEstado setClaEstadoMatricula()   Sets the current record's "ClaEstadoMatricula" value
 * @method CtrSlnCambioEstado setClaEstadoMatricula4()  Sets the current record's "ClaEstadoMatricula_4" value
 * @method CtrSlnCambioEstado setDatUsuUsuario()        Sets the current record's "DatUsuUsuario" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCtrSlnCambioEstado extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ctr_sln_cambio_estado');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('inscripcion_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('gestion_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('estado_anterior', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('estado_actual', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('fecha_modificacion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DatRdeInscripcion', array(
             'local' => 'inscripcion_id',
             'foreign' => 'id_inscripcion'));

        $this->hasOne('DatRdeInscripcion as DatRdeInscripcion_2', array(
             'local' => 'gestion_id',
             'foreign' => 'gestion_id'));

        $this->hasOne('ClaEstadoMatricula', array(
             'local' => 'estado_anterior',
             'foreign' => 'id_estado_matricula'));

        $this->hasOne('ClaEstadoMatricula as ClaEstadoMatricula_4', array(
             'local' => 'estado_actual',
             'foreign' => 'id_estado_matricula'));

        $this->hasOne('DatUsuUsuario', array(
             'local' => 'usuario_id',
             'foreign' => 'id'));
    }
}