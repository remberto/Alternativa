<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VInscripcion2008', 'doctrine');

/**
 * BaseVInscripcion2008
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_inscripcion
 * @property integer $gestion_id
 * @property string $codigo_rude_id
 * @property integer $num_matricula
 * @property string $cod_ue_id
 * @property integer $periodo_id
 * @property integer $operativo_id
 * @property integer $sub_cea_id
 * @property integer $nivel_id
 * @property integer $grado_id
 * @property integer $ciclo_id
 * @property string $paralelo
 * @property integer $turno_id
 * @property integer $estado_matricula_inicio_id
 * @property integer $estado_matricula_fin_id
 * @property string $cod_ue_procedencia_id
 * @property integer $observacion_id
 * @property string $observacion
 * @property date $fecha_inscripcion
 * @property string $apreciacion_final
 * 
 * @method integer          getId()                         Returns the current record's "id" value
 * @method integer          getIdInscripcion()              Returns the current record's "id_inscripcion" value
 * @method integer          getGestionId()                  Returns the current record's "gestion_id" value
 * @method string           getCodigoRudeId()               Returns the current record's "codigo_rude_id" value
 * @method integer          getNumMatricula()               Returns the current record's "num_matricula" value
 * @method string           getCodUeId()                    Returns the current record's "cod_ue_id" value
 * @method integer          getPeriodoId()                  Returns the current record's "periodo_id" value
 * @method integer          getOperativoId()                Returns the current record's "operativo_id" value
 * @method integer          getSubCeaId()                   Returns the current record's "sub_cea_id" value
 * @method integer          getNivelId()                    Returns the current record's "nivel_id" value
 * @method integer          getGradoId()                    Returns the current record's "grado_id" value
 * @method integer          getCicloId()                    Returns the current record's "ciclo_id" value
 * @method string           getParalelo()                   Returns the current record's "paralelo" value
 * @method integer          getTurnoId()                    Returns the current record's "turno_id" value
 * @method integer          getEstadoMatriculaInicioId()    Returns the current record's "estado_matricula_inicio_id" value
 * @method integer          getEstadoMatriculaFinId()       Returns the current record's "estado_matricula_fin_id" value
 * @method string           getCodUeProcedenciaId()         Returns the current record's "cod_ue_procedencia_id" value
 * @method integer          getObservacionId()              Returns the current record's "observacion_id" value
 * @method string           getObservacion()                Returns the current record's "observacion" value
 * @method date             getFechaInscripcion()           Returns the current record's "fecha_inscripcion" value
 * @method string           getApreciacionFinal()           Returns the current record's "apreciacion_final" value
 * @method VInscripcion2008 setId()                         Sets the current record's "id" value
 * @method VInscripcion2008 setIdInscripcion()              Sets the current record's "id_inscripcion" value
 * @method VInscripcion2008 setGestionId()                  Sets the current record's "gestion_id" value
 * @method VInscripcion2008 setCodigoRudeId()               Sets the current record's "codigo_rude_id" value
 * @method VInscripcion2008 setNumMatricula()               Sets the current record's "num_matricula" value
 * @method VInscripcion2008 setCodUeId()                    Sets the current record's "cod_ue_id" value
 * @method VInscripcion2008 setPeriodoId()                  Sets the current record's "periodo_id" value
 * @method VInscripcion2008 setOperativoId()                Sets the current record's "operativo_id" value
 * @method VInscripcion2008 setSubCeaId()                   Sets the current record's "sub_cea_id" value
 * @method VInscripcion2008 setNivelId()                    Sets the current record's "nivel_id" value
 * @method VInscripcion2008 setGradoId()                    Sets the current record's "grado_id" value
 * @method VInscripcion2008 setCicloId()                    Sets the current record's "ciclo_id" value
 * @method VInscripcion2008 setParalelo()                   Sets the current record's "paralelo" value
 * @method VInscripcion2008 setTurnoId()                    Sets the current record's "turno_id" value
 * @method VInscripcion2008 setEstadoMatriculaInicioId()    Sets the current record's "estado_matricula_inicio_id" value
 * @method VInscripcion2008 setEstadoMatriculaFinId()       Sets the current record's "estado_matricula_fin_id" value
 * @method VInscripcion2008 setCodUeProcedenciaId()         Sets the current record's "cod_ue_procedencia_id" value
 * @method VInscripcion2008 setObservacionId()              Sets the current record's "observacion_id" value
 * @method VInscripcion2008 setObservacion()                Sets the current record's "observacion" value
 * @method VInscripcion2008 setFechaInscripcion()           Sets the current record's "fecha_inscripcion" value
 * @method VInscripcion2008 setApreciacionFinal()           Sets the current record's "apreciacion_final" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseVInscripcion2008 extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('v_inscripcion_2008');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('id_inscripcion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('gestion_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('codigo_rude_id', 'string', 18, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '18',
             ));
        $this->hasColumn('num_matricula', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('cod_ue_id', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('periodo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('operativo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('sub_cea_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('nivel_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('grado_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('ciclo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('paralelo', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('turno_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('estado_matricula_inicio_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('estado_matricula_fin_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('cod_ue_procedencia_id', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('observacion_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('observacion', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('fecha_inscripcion', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('apreciacion_final', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}