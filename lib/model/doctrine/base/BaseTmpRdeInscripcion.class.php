<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TmpRdeInscripcion', 'doctrine');

/**
 * BaseTmpRdeInscripcion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $gestion_id
 * @property string $codigo_rude_id
 * @property string $cod_ue_id
 * @property integer $sub_cea_id
 * @property integer $nivel_id
 * @property integer $ciclo_id
 * @property integer $grado_id
 * @property string $paralelo
 * @property integer $estado_matricula_inicio_id
 * @property integer $estado_matricula_fin_id
 * @property string $turno
 * 
 * @method integer           getId()                         Returns the current record's "id" value
 * @method integer           getGestionId()                  Returns the current record's "gestion_id" value
 * @method string            getCodigoRudeId()               Returns the current record's "codigo_rude_id" value
 * @method string            getCodUeId()                    Returns the current record's "cod_ue_id" value
 * @method integer           getSubCeaId()                   Returns the current record's "sub_cea_id" value
 * @method integer           getNivelId()                    Returns the current record's "nivel_id" value
 * @method integer           getCicloId()                    Returns the current record's "ciclo_id" value
 * @method integer           getGradoId()                    Returns the current record's "grado_id" value
 * @method string            getParalelo()                   Returns the current record's "paralelo" value
 * @method integer           getEstadoMatriculaInicioId()    Returns the current record's "estado_matricula_inicio_id" value
 * @method integer           getEstadoMatriculaFinId()       Returns the current record's "estado_matricula_fin_id" value
 * @method string            getTurno()                      Returns the current record's "turno" value
 * @method TmpRdeInscripcion setId()                         Sets the current record's "id" value
 * @method TmpRdeInscripcion setGestionId()                  Sets the current record's "gestion_id" value
 * @method TmpRdeInscripcion setCodigoRudeId()               Sets the current record's "codigo_rude_id" value
 * @method TmpRdeInscripcion setCodUeId()                    Sets the current record's "cod_ue_id" value
 * @method TmpRdeInscripcion setSubCeaId()                   Sets the current record's "sub_cea_id" value
 * @method TmpRdeInscripcion setNivelId()                    Sets the current record's "nivel_id" value
 * @method TmpRdeInscripcion setCicloId()                    Sets the current record's "ciclo_id" value
 * @method TmpRdeInscripcion setGradoId()                    Sets the current record's "grado_id" value
 * @method TmpRdeInscripcion setParalelo()                   Sets the current record's "paralelo" value
 * @method TmpRdeInscripcion setEstadoMatriculaInicioId()    Sets the current record's "estado_matricula_inicio_id" value
 * @method TmpRdeInscripcion setEstadoMatriculaFinId()       Sets the current record's "estado_matricula_fin_id" value
 * @method TmpRdeInscripcion setTurno()                      Sets the current record's "turno" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTmpRdeInscripcion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tmp_rde_inscripcion');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => '8',
             ));
        $this->hasColumn('gestion_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('codigo_rude_id', 'string', 18, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '18',
             ));
        $this->hasColumn('cod_ue_id', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('sub_cea_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('nivel_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('ciclo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('grado_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('paralelo', 'string', 1, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('estado_matricula_inicio_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('estado_matricula_fin_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('turno', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}