<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CtrRdeCambioGrado', 'doctrine');

/**
 * BaseCtrRdeCambioGrado
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_inscripcion
 * @property integer $gestion_id
 * @property integer $nivel_id
 * @property integer $ciclo_id
 * @property integer $grado_id
 * @property string $paralelo
 * @property integer $turno_id
 * @property integer $user_id
 * @property date $fecha_cambio
 * @property DatRdeInscripcion $DatRdeInscripcion
 * @property DatRdeInscripcion $DatRdeInscripcion_2
 * @property DatUsuUsuario $DatUsuUsuario
 * 
 * @method integer           getIdInscripcion()       Returns the current record's "id_inscripcion" value
 * @method integer           getGestionId()           Returns the current record's "gestion_id" value
 * @method integer           getNivelId()             Returns the current record's "nivel_id" value
 * @method integer           getCicloId()             Returns the current record's "ciclo_id" value
 * @method integer           getGradoId()             Returns the current record's "grado_id" value
 * @method string            getParalelo()            Returns the current record's "paralelo" value
 * @method integer           getTurnoId()             Returns the current record's "turno_id" value
 * @method integer           getUserId()              Returns the current record's "user_id" value
 * @method date              getFechaCambio()         Returns the current record's "fecha_cambio" value
 * @method DatRdeInscripcion getDatRdeInscripcion()   Returns the current record's "DatRdeInscripcion" value
 * @method DatRdeInscripcion getDatRdeInscripcion2()  Returns the current record's "DatRdeInscripcion_2" value
 * @method DatUsuUsuario     getDatUsuUsuario()       Returns the current record's "DatUsuUsuario" value
 * @method CtrRdeCambioGrado setIdInscripcion()       Sets the current record's "id_inscripcion" value
 * @method CtrRdeCambioGrado setGestionId()           Sets the current record's "gestion_id" value
 * @method CtrRdeCambioGrado setNivelId()             Sets the current record's "nivel_id" value
 * @method CtrRdeCambioGrado setCicloId()             Sets the current record's "ciclo_id" value
 * @method CtrRdeCambioGrado setGradoId()             Sets the current record's "grado_id" value
 * @method CtrRdeCambioGrado setParalelo()            Sets the current record's "paralelo" value
 * @method CtrRdeCambioGrado setTurnoId()             Sets the current record's "turno_id" value
 * @method CtrRdeCambioGrado setUserId()              Sets the current record's "user_id" value
 * @method CtrRdeCambioGrado setFechaCambio()         Sets the current record's "fecha_cambio" value
 * @method CtrRdeCambioGrado setDatRdeInscripcion()   Sets the current record's "DatRdeInscripcion" value
 * @method CtrRdeCambioGrado setDatRdeInscripcion2()  Sets the current record's "DatRdeInscripcion_2" value
 * @method CtrRdeCambioGrado setDatUsuUsuario()       Sets the current record's "DatUsuUsuario" value
 * 
 * @package    alternativa
 * @subpackage model
 * @author     Lic. Remberto Quispe Gutierrez
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCtrRdeCambioGrado extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ctr_rde_cambio_grado');
        $this->hasColumn('id_inscripcion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('gestion_id', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('nivel_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('ciclo_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('grado_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('paralelo', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '2',
             ));
        $this->hasColumn('turno_id', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('fecha_cambio', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DatRdeInscripcion', array(
             'local' => 'id_inscripcion',
             'foreign' => 'id_inscripcion'));

        $this->hasOne('DatRdeInscripcion as DatRdeInscripcion_2', array(
             'local' => 'gestion_id',
             'foreign' => 'gestion_id'));

        $this->hasOne('DatUsuUsuario', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}